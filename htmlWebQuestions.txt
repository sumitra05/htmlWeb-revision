1) What is !important?
Ans. - The !important preperty in CSS is used to provide more weight(importance) than normal property.
     - If you use the !important rule, it will override all previous styling rules for that specific property on that element.


2) What is the box model?
Ans.    - The CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content.
        - Explanation of the different parts:
            Content - The content of the box, where text and images appear
            Padding - Clears an area around the content. The padding is transparent
            Border - A border that goes around the padding and content
            Margin - Clears an area outside the border. The margin is transparent
        The box model allows us to add a border around elements, and to define space between elements. 


3) What is the difference between position absolute, relative and fixed?
Ans.    - Relative - the relative positioning positions the element relative to where its normal position would have been.
        - Absolute - the absolute value positions the element absolutely relative to its container. With absolute positioning, you can place an element anywhere on a page. 
        - Fixed - the fixed positioning property positions the element relative to the screen's viewport and stays fixed on the screen when scrolling.


4) What is CSS positioning?
Ans.    - The CSS position property defines the position of an element in a document. This property works with the left, right, top, bottom and z-index properties to determine the final position of an element on a page.
        - There are five values the position property can take. They are:
            (a) static - has no effect on the position of an element. 
            (b) relative
            (c) absolute
            (d) fixed
            (e) sticky - position: sticky is a mix of position: relative and position: fixed. It acts like a relatively positioned element until a certain scroll point and then it acts like a fixed element.


5) The difference between display none and display hidden.
Ans.    - display: none removes the element from the normal flow of the page, allowing other elements to fill in.
        - display: hidden leaves the element in the normal flow of the page such that is still occupies space.


6) Difference between flex and grid? Where to use it?
Ans. - Dimensions:
        Flex: 1 Dimension (either a row or a column)
        Grid: 2 Dimensions (rows and columns at the same time)
    - Support type:
        Flex: Content first
        Grid: Layout first
    - Flex makes it easier to design flexible responsive layout structure without using float or positioning.
    - Grids are used when we want to divide a page into major regions or defining the relationship in terms of size, position, and layer.


7) What is BEM?
Ans.    - BEM is a front-end naming method for organizing and naming CSS classes.
        - The Block, Element, Modifier methodology is a popular naming convention for class names in HTML and CSS.
        - It helps to write clean CSS.
        - There are three main parts of BEM:
            Block which holds everything (elements) inside and acts as a scope.
            Element which acts as a specific part of the component.
            Modifier which adds additional styles to a specific element(s).


8) What is the z-index? What is the stacking context?
Ans. - z-index is a CSS property that defines the order of overlapping HTML elements. Elements with a higher index will be placed on top of elements with a lower index. 
    - It does not work on position: static
    - When the elements are all on the same level but still one element comes in front of another one because they also have a default order for the z-axis, it is known as stacking content.


9) Explain briefly what happens when you hit a url? Explain DNS lookup.
Ans.    - DNS means Domain Name System. 
        - Once a URL is hit browser checks if the domain is in its cache. 
        - If not found, the browser calls "gethostbyname" library function to do the lookup.
        - "gethostbyname" checks if the hostname can be resolved by reference in the local hosts file before trying to resolve the hostname through DNS.
        - If "gethostbyname" does not have it cached nor can find it in the hosts file then it makes a request to the DNS server configured in the network stack. 
          This is typically the local router or the ISP's caching DNS server. 
        - If the DNS server is on the same subnet the network library follows the Address Resolution Protocol process for the DNS server.
        - If the DNS server is on a different subnet, the network library follows the ARP process for the default gateway IP.


10) What is a URLs full form? Explain what a url is and the four parts it consists of The protocol in use The hostname of the server The location of the file The arguments to the file
Ans.    - URL is Uniform Resource Locator. It is an address to a resource on the internet.
        - URL is used when a web client makes a request to a server for a resource.
        - Four parts
            1. The protocol: it helps us identify which protocol to use to access the resource on the internet. It can be HTTP or HTTPS.
            2. The host: The host name identifies the host that holds the resource. For example, www.example.com. A server provides services in the name of the host, but hosts and servers do not have a one-to-one mapping. 
            3. The path: The path identifies the specific resource in the host that the web client wants to access. For example, /software/htp/cics/index.html.
            4. Query/Arguments: If a query string is used, it follows the path component, and provides a string of information that the resource can use for some purpose. The query string is usually a string of name and value pairs; for example, term=bluebird. 

11) What is HTTP protocol?
Ans.    - The Hypertext Transfer Protocol is an application protocol for distributed, collaborative information systems that allows users to communicate data on the World Wide Web.
        - As a request-response protocol, HTTP gives users a way to interact with web resources such as HTML files by transmitting hypertext messages between clients and servers. HTTP clients generally use Transmission Control Protocol (TCP) connections to communicate with servers.
        - HTTP utilizes specific request methods in order to perform various tasks. All HTTP servers use the GET and HEAD methods, but not all support the rest of the request methods.


12) What is TCP Protocol?
Ans.    - TCP (Transmission Control Protocol) is one of the main protocols of the Internet protocol suite. It lies between the Application and Network Layers which are used in providing reliable delivery services. It is a connection-oriented protocol for communications that helps in the exchange of messages between the different devices over a network.
        - To make sure that each message reaches its target location intact, the TCP/IP model breaks down the data into small bundles and afterward reassembles the bundles into the original message on the opposite end. Sending the information in little bundles of information makes it simpler to maintain efficiency as opposed to sending everything in one go. 
        - After a particular message is broken down into bundles, these bundles may travel along multiple routes if one route is jammed but the destination remains the same.
        - For example, When a user requests a web page on the internet, somewhere in the world, the server processes that request and sends back an HTML Page to that user. The server makes use of a protocol called the HTTP Protocol. The HTTP then requests the TCP layer to set the required connection and send the HTML file.
        - Now, the TCP breaks the data into small packets and forwards it towards the Internet Protocol (IP) layer. The packets are then sent to the destination through different routes.
        - The TCP layer in the user’s system waits for the transmission to get finished and acknowledges once all packets have been received.
    

13) Explain all the different HTTP methods?
Ans.    - GET: The GET method requests a representation of the specified resource. Requests using GET should only retrieve data.
        - POST: The POST method submits an entity to the specified resource, often causing a change in state or side effects on the server.
        - PUT: The PUT method replaces all current representations of the target resource with the request payload.
        - PATCH: The PATCH method applies partial modifications to a resource.
        - DELETE: The DELETE method deletes the specified resource.

14) What are HTTP headers?
Ans.   - HTTP headers let the client and the server pass additional information with an HTTP request or response. An HTTP header consists of its case-insensitive name followed by a colon (:), then by its value. 

15) What are some HTTP response codes? what does it mean? 2xx, 3xx, 4xx, 5xx
Ans.    - HTTP response status codes indicate whether a specific HTTP request has been successfully completed. Responses are grouped in five classes:
        1. Informational responses (100–199)
        2. Successful responses (200–299)
        3. Redirection messages (300–399)
        4. Client error responses (400–499)
        5. Server error responses (500–599)
    
16) What does cache control on http response mean?
Ans.    - Response caching reduces the number of requests a client or proxy makes to a web server. Response caching also reduces the amount of work the web server performs to generate a response. Response caching is controlled by headers that specify how you want client, proxy, and middleware to cache responses.


17) What is polling?
Ans.   - Polling is a technique by which the client keeps asking the server for new data regularly.


18) What is long polling?
Ans.    - Web applications were originally developed around a client/server model, where the Web client is always the initiator of transactions, requesting data from the server. Thus, there was no mechanism for the server to independently send, or push, data to the client without the client first making a request.
        - To overcome this deficiency, Web app developers can implement a technique called HTTP long polling, where the client polls the server requesting new information.  The server holds the request open until new data is available. Once available, the server responds and sends the new information. When the client receives the new information, it immediately sends another request, and the operation is repeated. This effectively emulates a server push feature. 

19) What are web sockets?
Ans.    - HTTP and WebSocket both are communication protocols used in client-server communication. 
        - WebSocket is bidirectional, a full-duplex protocol that is used in the same scenario of client-server communication, unlike HTTP it starts from ws:// or wss://. It is a stateful protocol, which means the connection between client and server will keep alive until it is terminated by either party (client or server). After closing the connection by either of the client and server, the connection is terminated from both ends. 
        - Almost all the real-time applications like (trading, monitoring, notification) services use WebSocket to receive the data on a single communication channel.
        - All the frequently updated applications used WebSocket because it is faster than HTTP Connection.

20) How is web sockets different from HTTP?
Ans.    1. WS: WebSocket is a bidirectional communication protocol that can send the data from the client to the server or from the server to the client by reusing the established connection channel. The connection is kept alive until terminated by either the client or the server.
           HTTP: The HTTP protocol is a unidirectional protocol that works on top of TCP protocol which is a connection-oriented transport layer protocol, we can create the connection by using HTTP request methods after getting the response HTTP connection get closed.

    2. WS: Almost all the real-time applications like (trading, monitoring, notification) services use WebSocket to receive the data on a single communication channel.
       HTTP: Simple RESTful application uses HTTP protocol which is stateless.

    3. WS: All the frequently updated applications used WebSocket because it is faster than HTTP Connection.
       HTTP: When we do not want to retain a connection for a particular amount of time or reuse the connection for transmitting data; An HTTP connection is slower than WebSockets.


21) What is HTTPS?
Ans.   - Hypertext transfer protocol secure (HTTPS) is the secure version of HTTP, which is the primary protocol used to send data between a web browser and a website. HTTPS is encrypted in order to increase security of data transfer. This is particularly important when users transmit sensitive data, such as by logging into a bank account, email service, or health insurance provider.


22) What is Cross Origin Resource Sharing? ( CORS ) Why do we need it?
Ans.  - The CORS mechanism supports secure cross-origin requests and data transfers between browsers and servers. 
      - Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins other than its own from which a browser should permit loading resources. 
      - CORS also relies on a mechanism by which browsers make a "preflight" request to the server hosting the cross-origin resource, in order to check that the server will permit the actual request. In that preflight, the browser sends headers that indicate the HTTP method and headers that will be used in the actual request.

23) What does Access-Control-Allow-Origin header do?
Ans.    - The Access-Control-Allow-Origin response header indicates whether the response can be shared with requesting code from the given origin.
        - * For requests without credentials, the literal value "*" can be specified as a wildcard; the value tells browsers to allow requesting code from any origin to access the resource. Attempting to use the wildcard with credentials results in an error.
        - <origin> Specifies an origin. Only a single origin can be specified. If the server supports clients from multiple origins, it must return the origin for the specific client making the request
        - null Specifies the origin "null".

24) What is clickjacking? How do you fix it?
Ans.    - Clickjacking is a malicious technique of tricking a user into clicking on something different from what the user perceives, thus potentially revealing confidential information or allowing others to take control of their computer while clicking on seemingly innocuous objects, including web pages. 

25) What are some performance metrics for your website?
Ans.    - Page Speed. Page speed is one of the most important metrics to be aware of, and it can have a far greater impact than you may even realize. ...
        - Time to Title. ...
        - Time to Start Render. ...
        - Time to Interact. ...
        - DNS Lookup Speed. ...
        - Bounce Rate. ...
        - Requests Per Second. ...
        - Error Rate.

26) What does the following term mean:
Ans.   (a) Time to first byte: Time to first byte is a measurement used as an indication of the responsiveness of a webserver or other network resource. TTFB measures the duration from the user or client making an HTTP request to the first byte of the page being received by the client's browser.
       (b) Page load time: Page load time is the time it takes for a page to load, measured from navigation start to the start of the load event.

27) What do CDN or Content Delivery Networks do? When do you need a CDN?
Ans.    - A content delivery network (CDN) is a group of geographically distributed servers that speed up the delivery of web content by bringing it closer to where users are.
        - Anybody who has a website or mobile application that's likely to be requested by more than one user at a time can benefit from a CDN. They are especially useful to large, complex websites with users spread across the globe, and websites or mobile apps with lots of dynamic content.

28) What is the difference between Client Side Renderring and Server Side Renderring?
Ans.   - Server side:
            1. Search engines can crawl the site for better SEO.
            2. The initial page load is faster.
            3. Great for static sites
            4. Frequent server requests.
            5. An overall slow page rendering.
            6. Full page reloads.
            7. Non-rich site interactions.
      - Client side:
            1. Rich site interactions
            2. Fast website rendering after the initial load.
            3. Great for web applications.
            4. Robust selection of JavaScript libraries.    
            5. Low SEO if not implemented correctly.
            6. Initial load might require more time.
            7. In most cases, requires an external library.


29) What is Progressive Renderring?
Ans.    - Progressive HTML rendering is a relatively old technique that can be used to improve the performance of websites.
        - Give the web browser a head start in downloading and rendering the page by flushing out early and multiple times.
        - Progressive rendering is the name given to techniques used to render content for display as quickly as possible.
        - It used to be much more prevalent in the days before broadband internet but it's still useful in modern development as mobile data connections are becoming increasingly popular.
        - Examples:
            1. Lazy loading: Lazy loading of images where (typically) some javascript will load an image when it comes into the browsers viewport instead of loading all images at page load.
            2. Prioritizing visible content: where you include only the minimum css/content/scripts necessary for the amount of page that would be rendered in the users browser first to display as quickly as possible, you can then use deferred javascript to load in other resources and content.


30) What is the difference between Preloading and Prefetching resources?
Ans.    - Preload is an early fetch instruction to the browser to request a resource needed for a page (key scripts, Web Fonts, hero images). 
        - Prefetching is when content is downloaded in the background, this is based on the assumption that the content will likely be requested, enabling the content to load instantly if and when the user requests it.

31) What are service workers?
Ans.    - A service worker is a type of web worker.
         It's essentially a JavaScript file that runs separately from the main browser thread, intercepting network requests, caching or retrieving resources from the cache, and delivering push messages.
